version: 2
jobs:
  build_and_test:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "studybuddy"
      - FRONTEND: "sb_frontend"
      - BACKEND: "sb_backend"
      - GOOGLE_PROJECT_ID: "gleaming-idiom-343203"
      - GOOGLE_COMPUTE_ZONE: "us-central1"
      - GOOGLE_CLUSTER_NAME: "prod"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run: 
          name: Docker compose build and push
          command: |
            docker-compose build 
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker-compose push 
      - run: 
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: main